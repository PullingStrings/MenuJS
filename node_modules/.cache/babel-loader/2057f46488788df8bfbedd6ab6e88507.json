{"ast":null,"code":"var _jsxFileName = \"/Users/titozwane/Documents/menuJS/src/components/app/order/order-container.js\";\nimport React, { Component } from \"react\";\nimport getCourseItems from \"../../../utils/courseItem\";\nimport getItemIndex from \"../../../utils/itemIndex\";\nimport OrderView from \"./order-view\";\nimport OrderSummary from \"./order-summary\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default class OrderContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      let {\n        selectedItems\n      } = this.state;\n\n      const jsonData = require(\"../../../assets/data/fe-tech-data.json\");\n\n      const courseItems = getCourseItems(jsonData, this.props.course);\n\n      if (Object.entries(selectedItems).length === 0) {\n        jsonData.map(res => {\n          /* Add empty arrays for each course to add items later */\n          return selectedItems[res.courseType[0]] = [];\n        });\n      }\n\n      this.setState({\n        courseItems,\n        selectedItems\n      });\n    };\n\n    this.handleItems = (id, itemTitle) => {\n      let {\n        selectedItems\n      } = this.state;\n      const {\n        course\n      } = this.props;\n      const item = {\n        id: id,\n        title: itemTitle\n      };\n      console.log(course);\n\n      if (selectedItems[course].length !== 0) {\n        let index = selectedItems[course].findIndex(item => item.id === id);\n        let index2 = getItemIndex(selectedItems[course], id);\n        console.log(index + \" \" + index2);\n        /* If index is not negative delete the item */\n\n        if (index >= 0) {\n          selectedItems[course].splice(index, 1);\n          this.setState({\n            selectedItems\n          });\n          return;\n        }\n      }\n\n      selectedItems[course].push(item);\n      this.setState({\n        selectedItems\n      });\n    };\n\n    this.handleNextCourse = () => {\n      const {\n        selectedItems\n      } = this.state;\n      const {\n        course\n      } = this.props;\n\n      if (Object.keys(selectedItems).length - 1 !== course) {\n        /* Check if at least one item is selected in main couse */\n        if (course === 4) {\n          if (selectedItems[course].length === 0) {\n            alert(\"Select at least one item from this course.\");\n            return;\n          }\n        }\n\n        this.props.changeCourse(course + 1);\n      } else {\n        this.props.summaryHandler();\n      }\n    };\n\n    this.handleChangeOrder = () => {\n      this.props.changeCourse();\n      this.props.summaryHandler();\n    };\n\n    this.state = {\n      courseItems: [],\n      selectedItems: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(props) {\n    if (this.props !== props) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    if (this.props.summary) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(OrderSummary, {\n        selectedItems: this.state.selectedItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button default\",\n        onClick: this.handleChangeOrder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"Change order\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(OrderView, Object.assign({}, this.state, {\n        course: this.props.course,\n        itemHandler: this.handleItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button default\",\n        onClick: this.handleNextCourse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, Object.keys(this.state.selectedItems).length - 1 !== this.props.course ? \"Next course\" : \"Show complete order\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/titozwane/Documents/menuJS/src/components/app/order/order-container.js"],"names":["React","Component","getCourseItems","getItemIndex","OrderView","OrderSummary","Grid","OrderContainer","constructor","props","fetchData","selectedItems","state","jsonData","require","courseItems","course","Object","entries","length","map","res","courseType","setState","handleItems","id","itemTitle","item","title","console","log","index","findIndex","index2","splice","push","handleNextCourse","keys","alert","changeCourse","summaryHandler","handleChangeOrder","componentDidMount","componentDidUpdate","render","summary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport getCourseItems from \"../../../utils/courseItem\"\nimport getItemIndex from \"../../../utils/itemIndex\"\nimport OrderView from \"./order-view\"\nimport OrderSummary from \"./order-summary\"\nimport Grid from \"@material-ui/core/Grid\"\n\nexport default class OrderContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      courseItems: [],\n      selectedItems: {}\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  componentDidUpdate(props) {\n    if (this.props !== props) {\n      this.fetchData()\n    }\n  }\n\n  fetchData = () => {\n    let { selectedItems } = this.state\n    const jsonData = require(\"../../../assets/data/fe-tech-data.json\")\n    const courseItems = getCourseItems(jsonData, this.props.course)\n\n    if (Object.entries(selectedItems).length === 0) {\n      jsonData.map(res => {\n        /* Add empty arrays for each course to add items later */\n        return (selectedItems[res.courseType[0]] = [])\n      })\n    }\n    this.setState({\n      courseItems,\n      selectedItems\n    })\n  }\n\n  handleItems = (id, itemTitle) => {\n    let { selectedItems } = this.state\n    const { course } = this.props\n    const item = { id: id, title: itemTitle }\n    console.log(course);\n    if (selectedItems[course].length !== 0) {\n      let index = selectedItems[course].findIndex(item => item.id === id)\n      let index2 = getItemIndex(selectedItems[course], id)\n      console.log(index+\" \"+index2)\n      /* If index is not negative delete the item */\n      if (index >= 0) {\n        selectedItems[course].splice(index, 1)\n        this.setState({\n          selectedItems\n        })\n        return\n      }\n    }\n\n    selectedItems[course].push(item)\n\n    this.setState({\n      selectedItems\n    })\n  }\n\n  handleNextCourse = () => {\n    const { selectedItems } = this.state\n    const { course } = this.props\n    if (Object.keys(selectedItems).length - 1 !== course) {\n      /* Check if at least one item is selected in main couse */\n      if (course === 4) {\n        if (selectedItems[course].length === 0) {\n          alert(\"Select at least one item from this course.\")\n          return\n        }\n      }\n      this.props.changeCourse(course + 1)\n    } else {\n      this.props.summaryHandler()\n    }\n  }\n\n  handleChangeOrder = () => {\n    this.props.changeCourse()\n    this.props.summaryHandler()\n  }\n\n  render() {\n    if (this.props.summary) {\n      return (\n        <div className=\"summary-container\">\n          <OrderSummary selectedItems={this.state.selectedItems} />\n          <button className=\"button default\" onClick={this.handleChangeOrder}>\n            Change order\n          </button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"order-container\">\n          <Grid container spacing={3}>\n            <OrderView\n              {...this.state}\n              course={this.props.course}\n              itemHandler={this.handleItems}\n            />\n          </Grid>\n          <button className=\"button default\" onClick={this.handleNextCourse}>\n            {Object.keys(this.state.selectedItems).length - 1 !==\n            this.props.course\n              ? \"Next course\"\n              : \"Show complete order\"}\n          </button>\n        </div>\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}