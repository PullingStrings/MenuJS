{"version":3,"sources":["utils/itemIndex.js","components/app/order/order-item.js","components/app/order/order-view.js","utils/courseName.js","components/app/order/order-summary-view.js","components/app/order/order-summary.js","components/app/order/order-container.js","utils/courseItem.js","components/app/steps/steps-button.js","components/app/steps/steps-button-panel.js","components/app/steps/steps-container.js","components/app/app.js","serviceWorker.js","index.js"],"names":["getItemIndex","selectedItems","id","price","findIndex","item","OrderItem","handleClick","props","itemHandler","itemTitle","itemPrice","Card","className","this","selected","CardActionArea","onClick","CardContent","Typography","gutterBottom","variant","component","Component","OrderView","courseItems","map","res","Grid","xs","key","title","course","courses","OrderSummaryView","courseTitle","OrderSummary","Object","keys","length","i","push","number","OrderContainer","fetchData","state","jsonData","require","courseType","items","filter","includes","getCourseItems","entries","setState","handleItems","index","console","log","splice","handleNextCourse","alert","changeCourse","summaryHandler","handleChangeOrder","summary","container","spacing","StepsButton","clickHandler","active","disabled","courseName","ButtonPanel","activeCourse","StepsContainer","App","handleCourse","handleSummary","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"s/BAAe,SAASA,EAAaC,EAAeC,EAAIC,GACtD,OAAOF,EAAcG,WAAU,SAAAC,GAAI,OAAIA,EAAKH,KAAOA,K,oCCMhCI,E,4MACnBC,YAAc,WACZ,EAAKC,MAAMC,YAAY,EAAKD,MAAMN,GAAI,EAAKM,MAAME,UAAW,EAAKF,MAAMG,Y,uDAIvE,OACE,kBAACC,EAAA,EAAD,CACEC,UAAS,UAAKC,KAAKN,MAAMK,UAAhB,YACPC,KAAKN,MAAMO,SAAW,YAAc,KAGtC,kBAACC,EAAA,EAAD,CAAgBC,QAASH,KAAKP,aAC5B,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KACVT,UAAU,cAETC,KAAKN,MAAME,WAEd,kBAACS,EAAA,EAAD,CACEE,QAAQ,QACRC,UAAU,IACVT,UAAU,aAHZ,SAKSC,KAAKN,MAAMG,WAGpB,kBAACQ,EAAA,EAAD,CACEE,QAAQ,QACRC,UAAU,IACVT,UAAU,qB,GAjCeU,a,QCFlBC,E,4MACnBjB,YAAc,SAACL,EAAIQ,EAAWC,GAC5B,EAAKH,MAAMC,YAAYP,EAAIQ,EAAWC,I,uDAG9B,IAAD,OACP,OAAOG,KAAKN,MAAMiB,YAAYC,KAAI,SAAAC,GAAG,OACnC,kBAACC,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,EAAGC,IAAKH,EAAIzB,IACzB,kBAAC,EAAD,CACEA,GAAIyB,EAAIzB,GACRQ,UAAWiB,EAAII,MACfpB,UAAWgB,EAAIxB,MACfM,YAAa,EAAKF,YAClBM,UAAU,aACVE,SACEf,EAAa,EAAKQ,MAAMP,cAAc,EAAKO,MAAMwB,QAASL,EAAIzB,GAAIyB,EAAIxB,QAAU,Y,GAfrDoB,aCLjCU,EAAU,CACd,UACA,OACA,Y,ICDmBC,E,uKAGjB,OACE,yBAAKrB,UAAU,sBAEb,wBAAIA,UAAU,SAASC,KAAKN,MAAM2B,aAClC,6BACGrB,KAAKN,MAAMiB,YAAYC,KAAI,SAAArB,GAAI,OAC9B,wBAAIyB,IAAKzB,EAAKH,IAAd,WAA2BG,EAAK0B,MAC9B,6BADF,UAEQ1B,EAAKF,gB,GAXqBoB,aCEzBa,E,uKACT,IACAnC,EAAkBa,KAAKN,MAAvBP,cACR,OAAOoC,OAAOC,KAAKrC,GAAeyB,KAAI,SAAArB,GACpC,GAAmC,IAA/BJ,EAAcI,GAAMkC,OAAc,CAEpC,IADA,IAAId,EAAc,GACTe,EAAI,EAAGA,EAAIvC,EAAcI,GAAMkC,OAAQC,IAC9Cf,EAAYgB,KAAKxC,EAAcI,GAAMmC,IAEvC,OACE,kBAAC,EAAD,CACEV,IAAKzB,EACL8B,aFVWO,EEUgBrC,EFT9B4B,EAAQS,IEULjB,YAAaA,IFXzB,IAAuBiB,S,GEFmBnB,aCGrBoB,E,kDACnB,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRoC,UAAY,WAAO,IACX3C,EAAkB,EAAK4C,MAAvB5C,cACA6C,EAAWC,EAAQ,IACnBtB,EC7BK,SAAwBA,GAA8B,IAAjBuB,EAAgB,uDAAH,EACzDC,EAAQxB,EAAYyB,QAAO,SAAAvB,GAC/B,OAAOA,EAAIqB,WAAWG,SAASH,MAEjC,OAAOC,EDyBeG,CAAeN,EAAU,EAAKtC,MAAMwB,QAEX,IAAzCK,OAAOgB,QAAQpD,GAAesC,QAChCO,EAASpB,KAAI,SAAAC,GAEX,OAAQ1B,EAAc0B,EAAIqB,WAAW,IAAM,MAG/C,EAAKM,SAAS,CACZ7B,cACAxB,mBA/Be,EAmCnBsD,YAAc,SAACrD,EAAIQ,EAAWC,GAAe,IACrCV,EAAkB,EAAK4C,MAAvB5C,cACE+B,EAAW,EAAKxB,MAAhBwB,OACF3B,EAAO,CAAEH,GAAIA,EAAI6B,MAAOrB,EAAWP,MAAOQ,GAEhD,GAAqC,IAAjCV,EAAc+B,GAAQO,OAAc,CACtC,IAAIiB,EAAQvD,EAAc+B,GAAQ5B,WAAU,SAAAC,GAAI,OAAIA,EAAKH,KAAOA,KACnDF,EAAaC,EAAc+B,GAAS9B,GAKjD,GAJAuD,QAAQC,IAAI/C,GAAa,GAIrB6C,GAAS,EAKX,OAJAvD,EAAc+B,GAAQ2B,OAAOH,EAAO,QACpC,EAAKF,SAAS,CACZrD,kBAMNA,EAAc+B,GAAQS,KAAKpC,GAE3B,EAAKiD,SAAS,CACZrD,mBA3De,EA+DnB2D,iBAAmB,WAAO,IAChB3D,EAAkB,EAAK4C,MAAvB5C,cACA+B,EAAW,EAAKxB,MAAhBwB,OACR,GAAIK,OAAOC,KAAKrC,GAAesC,OAAS,IAAMP,EAAQ,CAEpD,GAAe,IAAXA,GACmC,IAAjC/B,EAAc+B,GAAQO,OAExB,YADAsB,MAAM,8CAIV,EAAKrD,MAAMsD,aAAa9B,EAAS,QAEjC,EAAKxB,MAAMuD,kBA5EI,EAgFnBC,kBAAoB,WAClB,EAAKxD,MAAMsD,eACX,EAAKtD,MAAMuD,kBAhFX,EAAKlB,MAAQ,CACXpB,YAAa,GACbxB,cAAe,IAJA,E,gEASjBa,KAAK8B,c,yCAGYpC,GACbM,KAAKN,QAAUA,GACjBM,KAAK8B,c,+BAwEP,OAAI9B,KAAKN,MAAMyD,QAEX,yBAAKpD,UAAU,qBACb,kBAAC,EAAD,CAAcZ,cAAea,KAAK+B,MAAM5C,gBACxC,4BAAQY,UAAU,iBAAiBI,QAASH,KAAKkD,mBAAjD,iBAOF,yBAAKnD,UAAU,mBACb,kBAACe,EAAA,EAAD,CAAMsC,WAAS,EAACC,QAAS,GACvB,kBAAC,EAAD,iBACMrD,KAAK+B,MADX,CAEEb,OAAQlB,KAAKN,MAAMwB,OACnBvB,YAAaK,KAAKyC,gBAGtB,4BAAQ1C,UAAU,iBAAiBI,QAASH,KAAK8C,kBAC9CvB,OAAOC,KAAKxB,KAAK+B,MAAM5C,eAAesC,OAAS,IAChDzB,KAAKN,MAAMwB,OACP,cACA,4B,GA9G4BT,aELvB6C,E,4MACnB7D,YAAc,WACZ,EAAKC,MAAM6D,aAAa,EAAK7D,MAAMwB,S,uDAInC,OACE,4BAAQnB,UAAS,iBAAYC,KAAKN,MAAMK,UAAvB,YAAoCC,KAAKN,MAAM8D,OAAS,UAAY,GAApE,YAA0ExD,KAAKN,MAAM+D,SAAW,YAAc,IAAMtD,QAASH,KAAKP,aAChJO,KAAKN,MAAMgE,gB,GARqBjD,aCCpBkD,E,4MACnBlE,YAAc,SAAAyB,GACZ,EAAKxB,MAAM6D,aAAarC,I,uDAGhB,IAAD,OACP,OAAOlB,KAAKN,MAAMyB,QAAQP,KAAI,SAAC8C,EAAYxC,GAAb,OAC5B,kBAAC,EAAD,CACEF,IAAKE,EACLA,OAAQA,EACRwC,WAAYA,EACZH,aAAc,EAAK9D,YACnBM,UAAU,QACVyD,OAAQ,EAAK9D,MAAMkE,eAAiB1C,EACpCuC,SAAW,EAAK/D,MAAMkE,aAAe1C,W,GAdJT,aCCpBoD,E,4MACnBpE,YAAc,SAAAyB,GACR,EAAKxB,MAAMwB,OAASA,GACtB,EAAKxB,MAAMsD,aAAa9B,I,uDAK1B,OACE,yBAAKnB,UAAS,0BAAqBC,KAAKN,MAAMyD,QAAU,QAAU,KAChE,kBAAC,EAAD,CACEhC,QPJDA,EOKCoC,aAAcvD,KAAKP,YACnBmE,aAAc5D,KAAKN,MAAMwB,c,GAbST,aCEvBqD,G,wDACnB,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAORqE,aAAe,WAAiB,IAAhB7C,EAAe,uDAAN,EACvB,EAAKsB,SAAS,CAAEtB,YATC,EAYnB8C,cAAgB,WACd,EAAKxB,SAAS,CAAEW,SAAU,EAAKpB,MAAMoB,WAXrC,EAAKpB,MAAQ,CACXb,OAAQ,EACRiC,SAAS,GAJM,E,qDAiBjB,OACE,0BAAMpD,UAAU,OACd,wBAAIA,UAAU,SACXC,KAAK+B,MAAMoB,QAAU,eAAiB,mBAEzC,kBAAC,EAAD,iBACMnD,KAAK+B,MADX,CAEEiB,aAAchD,KAAK+D,aACnBd,eAAgBjD,KAAKgE,iBAEvB,kBAAC,EAAD,iBACMhE,KAAK+B,MADX,CAEEiB,aAAchD,KAAK+D,aACnBd,eAAgBjD,KAAKgE,sB,GA/BEvD,cCMbwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1da5f267.chunk.js","sourcesContent":["export default function getItemIndex(selectedItems, id, price) {\n  return selectedItems.findIndex(item => item.id === id)\n}\n","import React, { Component } from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActionArea from \"@material-ui/core/CardActionArea\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport Typography from \"@material-ui/core/Typography\"\n\nexport default class OrderItem extends Component {\n  handleClick = () => {\n    this.props.itemHandler(this.props.id, this.props.itemTitle, this.props.itemPrice)\n  }\n\n  render() {\n    return (\n      <Card\n        className={`${this.props.className} ${\n          this.props.selected ? \"-selected\" : \"\"\n        }`}\n      >\n        <CardActionArea onClick={this.handleClick}>\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h6\"\n              component=\"h2\"\n              className=\"item-title\"\n            >\n              {this.props.itemTitle}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              className=\"item-info\"\n            >\n              Price:{this.props.itemPrice}\n\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              className=\"item-desc\"\n            >\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport OrderItem from \"./order-item\"\nimport Grid from \"@material-ui/core/Grid\"\nimport getItemIndex from \"../../../utils/itemIndex\"\n\nexport default class OrderView extends Component {\n  handleClick = (id, itemTitle, itemPrice) => {\n    this.props.itemHandler(id, itemTitle, itemPrice)\n  }\n\n  render() {\n    return this.props.courseItems.map(res => (\n      <Grid item xs={4} key={res.id}>\n        <OrderItem\n          id={res.id}\n          itemTitle={res.title}\n          itemPrice={res.price}\n          itemHandler={this.handleClick}\n          className=\"order-item\"\n          selected={\n            getItemIndex(this.props.selectedItems[this.props.course], res.id, res.price) >= 0\n          }\n        />\n      </Grid>\n    ))\n  }\n}\n","const courses = [\n  \"Starter\",\n  \"Main\",\n  \"Desserts\"\n]\n\nfunction getCourseName(number) {\n  return courses[number]\n}\n\nfunction getAllCourseNames() {\n  return courses\n}\n\nexport { getAllCourseNames, getCourseName }\n","import React, { Component } from \"react\"\n\nexport default class OrderSummaryView extends Component {\n\n  render() {\n    return (\n      <div className=\"order-summary-view\">\n\n        <h2 className=\"title\">{this.props.courseTitle}</h2>\n        <div>\n          {this.props.courseItems.map(item => (\n            <h3 key={item.id}>  Meal: {item.title}\n            { <br/> }\n            Price: {item.price}\n            </h3>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { getCourseName } from \"../../../utils/courseName\"\nimport OrderSummaryView from \"./order-summary-view\"\n\nexport default class OrderSummary extends Component {\n  render() {\n    const { selectedItems } = this.props\n    return Object.keys(selectedItems).map(item => {\n      if (selectedItems[item].length !== 0) {\n        let courseItems = []\n        for (let i = 0; i < selectedItems[item].length; i++) {\n          courseItems.push(selectedItems[item][i])\n        }\n        return (\n          <OrderSummaryView\n            key={item}\n            courseTitle={getCourseName(item)}\n            courseItems={courseItems}\n          />\n        )\n      }\n    })\n  }\n}\n","import React, { Component } from \"react\"\nimport getCourseItems from \"../../../utils/courseItem\"\nimport getItemIndex from \"../../../utils/itemIndex\"\nimport OrderView from \"./order-view\"\nimport OrderSummary from \"./order-summary\"\nimport Grid from \"@material-ui/core/Grid\"\n\nexport default class OrderContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      courseItems: [],\n      selectedItems: {}\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  componentDidUpdate(props) {\n    if (this.props !== props) {\n      this.fetchData()\n    }\n  }\n\n  fetchData = () => {\n    let { selectedItems } = this.state\n    const jsonData = require(\"../../../assets/data/fe-tech-data.json\")\n    const courseItems = getCourseItems(jsonData, this.props.course)\n\n    if (Object.entries(selectedItems).length === 0) {\n      jsonData.map(res => {\n        /* Add empty arrays for each course to add items later */\n        return (selectedItems[res.courseType[0]] = [])\n      })\n    }\n    this.setState({\n      courseItems,\n      selectedItems\n    })\n  }\n\n  handleItems = (id, itemTitle, itemPrice) => {\n    let { selectedItems } = this.state\n    const { course } = this.props\n    const item = { id: id, title: itemTitle, price: itemPrice }\n\n    if (selectedItems[course].length !== 0) {\n      let index = selectedItems[course].findIndex(item => item.id === id)\n      let index2 = getItemIndex(selectedItems[course], id)\n      console.log(itemPrice += 0);\n      // console.log(index+\" \"+index2)\n\n      /* If index is not negative delete the item */\n      if (index >= 0) {\n        selectedItems[course].splice(index, 1)\n        this.setState({\n          selectedItems\n        })\n        return\n      }\n    }\n\n    selectedItems[course].push(item)\n\n    this.setState({\n      selectedItems\n    })\n  }\n\n  handleNextCourse = () => {\n    const { selectedItems } = this.state\n    const { course } = this.props\n    if (Object.keys(selectedItems).length - 1 !== course) {\n      /* Check if at least one item is selected in main couse */\n      if (course === 1) {\n        if (selectedItems[course].length === 0) {\n          alert(\"Select at least one item from this course.\")\n          return\n        }\n      }\n      this.props.changeCourse(course + 1)\n    } else {\n      this.props.summaryHandler()\n    }\n  }\n\n  handleChangeOrder = () => {\n    this.props.changeCourse()\n    this.props.summaryHandler()\n  }\n\n  render() {\n    if (this.props.summary) {\n      return (\n        <div className=\"summary-container\">\n          <OrderSummary selectedItems={this.state.selectedItems} />\n          <button className=\"button default\" onClick={this.handleChangeOrder}>\n            Change order\n          </button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"order-container\">\n          <Grid container spacing={3}>\n            <OrderView\n              {...this.state}\n              course={this.props.course}\n              itemHandler={this.handleItems}\n            />\n          </Grid>\n          <button className=\"button default\" onClick={this.handleNextCourse}>\n            {Object.keys(this.state.selectedItems).length - 1 !==\n            this.props.course\n              ? \"Next course\"\n              : \"Show complete order\"}\n          </button>\n        </div>\n      )\n    }\n  }\n}\n","export default function getCourseItems(courseItems, courseType = 0) {\n    let items = courseItems.filter(res => {\n    return res.courseType.includes(courseType)\n  })\n  return items\n}\n","import React, { Component } from \"react\"\n\nexport default class StepsButton extends Component {\n  handleClick = () => {\n    this.props.clickHandler(this.props.course)\n  }\n\n  render() {\n    return (\n      <button className={`button ${this.props.className} ${this.props.active ? '-active' : \"\"} ${this.props.disabled ? '-disabled' : \"\"}`} onClick={this.handleClick}>\n        {this.props.courseName}\n      </button>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport StepsButton from \"./steps-button\"\n\nexport default class ButtonPanel extends Component {\n  handleClick = course => {\n    this.props.clickHandler(course)\n  }\n\n  render() {\n    return this.props.courses.map((courseName, course) => (\n      <StepsButton\n        key={course}\n        course={course}\n        courseName={courseName}\n        clickHandler={this.handleClick}\n        className=\"steps\"\n        active={this.props.activeCourse === course}\n        disabled={(this.props.activeCourse < course)}\n      />\n    ))\n  }\n}\n","import React, { Component } from \"react\"\nimport { getAllCourseNames } from \"../../../utils/courseName\"\nimport ButtonPanel from \"./steps-button-panel\"\n\nexport default class StepsContainer extends Component {\n  handleClick = course => {\n    if (this.props.course > course) {\n      this.props.changeCourse(course)\n    }\n  }\n\n  render() {\n    return (\n      <div className={`steps-container ${this.props.summary ? \"-hide\" : \"\"}`}>\n        <ButtonPanel\n          courses={getAllCourseNames()}\n          clickHandler={this.handleClick}\n          activeCourse={this.props.course}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport Order from \"./order\"\nimport Steps from \"./steps\"\n\nimport \"./app.scss\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      course: 0,\n      summary: false\n    }\n  }\n\n  handleCourse = (course = 0) => {\n    this.setState({ course })\n  }\n\n  handleSummary = () => {\n    this.setState({ summary: !this.state.summary })\n  }\n\n  render() {\n    return (\n      <main className=\"app\">\n        <h1 className=\"title\">\n          {this.state.summary ? \"Your order: \" : \"Restaurant Menu\"}\n        </h1>\n        <Steps\n          {...this.state}\n          changeCourse={this.handleCourse}\n          summaryHandler={this.handleSummary}\n        />\n        <Order\n          {...this.state}\n          changeCourse={this.handleCourse}\n          summaryHandler={this.handleSummary}\n        />\n      </main>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}